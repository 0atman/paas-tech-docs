<h1 id="influxdb">InfluxDB (private beta)</h1>

[InfluxDB](https://www.influxdata.com/) is an open source time series database
that allows you to store, index, and search time series data.

<%= warning_text('InfluxDB is in private beta.') %>

If you would like to try InfluxDB while the service is in private-beta, you
must [contact support](https://www.cloud.service.gov.uk/support)
to ask the GOV.UK PaaS team to enable your access to InfluxDB.

<h2 id="set-up-the-service">Set up the service</h2>

### Set up an InfluxDB service

1. Check whether you have access to InfluxDB by running:

    ```
    cf marketplace -s influxdb
    ```


    Here is an example of the output you will see:

    ```
    service plan   description                                                                            free or paid
    tiny-1.x       NOT Highly Available, 1 dedicated VM, 2 CPU per VM, 4GB RAM per VM, 16GB disk space.   paid
    ```


    Currently, there is only one plan available for InfluxDB: `tiny-1.x`.

    If the GOV.UK PaaS team have not enabled your access to InfluxDB, you will see:

    ```
    Service offering 'influxdb' not found.
    FAILED
    ```

2. Run the following to create a service instance:

    ```
    cf create-service influxdb tiny-1.x SERVICE_NAME
    ```


    where `SERVICE_NAME` is a unique descriptive name for this service instance. For example:

    ```
    cf create-service influxdb tiny-1.x my-influxdb-service
    ```

    It will take between 5 and 10 minutes to set up the service instance. To check its progress, run:

    ```
    cf service SERVICE_NAME
    ```

    for example:

    ```
    cf service my-influxdb-service
    ```

    When `cf service SERVICE_NAME` returns a `create succeeded` status, you have set up the service instance. An example output could be:

    ```
    name:            my-influxdb-service
    service:         influxdb
    tags:
    plan:            tiny-1.x
    description:     InfluxDB instances provisioned via Aiven
    documentation:
    dashboard:

    There are no bound apps for this service.

    Showing status of last operation from service my-influxdb-service...

    status:    create succeeded
    message:   Last operation succeeded
    started:   2019-11-18T10:17:30Z
    updated:   2019-11-18T10:21:35Z
    ```

### Bind an InfluxDB service to your apps

To access the database from the app, you must bind your app to the InfluxDB service.

1. Use the [app's manifest](/deploying_apps.html#deploying-public-apps) to bind the app to the service instance. It will bind automatically when you next deploy your app. An example manifest:

    ```
    --
    applications:
      - name: my-app
        services:
        - my-influxdb-service
    ```

1. Deploy your app in line with your normal deployment process.

This binds your app to a service instance called `my-influxdb-service`.

Refer to the [Cloud Foundry documentation on deploying with app manifests](https://docs.cloudfoundry.org/devguide/deploy-apps/manifest.html#services-block) for more information.

#### Use the cf bind-service command

Alternatively, you can manually bind your service instance to your app.

1. Run the following:

    ```
    cf bind-service APP_NAME SERVICE_NAME
    ```


    where:
      - `APP_NAME` is the exact name of a deployed instance of your application
      - `SERVICE_NAME` is the name of the service instance you created

    For example:


    ```
    cf bind-service my-app my-influxdb-service
    ```

1. Deploy your app in line with your normal deployment process.

Refer to the [Cloud Foundry documentation on deploying with app manifests](https://docs.cloudfoundry.org/devguide/deploy-apps/manifest.html#services-block) for more information.

<% 'TODO when we have more InfluxDB plans, we should have a section called "Amend the service" wherein we discuss upgrading' %>

<h2 id="use-the-service">Use the service</h2>

### Read and write data to InfluxDB

When you create an InfluxDB service instance, the service broker automatically
creates a database called `defaultdb`. The `defaultdb` database is the only
database within the InfluxDB service instance that you have permissions to use.

When reading from and writing to InfluxDB you must specify the database as
`defaultdb`.

If you are using the
[InfluxDB HTTP API](https://docs.influxdata.com/influxdb/v1.7/tools/api/)
directly, you must specify the database using the `db` query parameter.
For example, `db=defaultdb`.

If you are using
[an API client library](https://docs.influxdata.com/influxdb/v1.7/tools/api_client_libraries/),
you must specify the database as `defaultdb` using your library's configuration.

### Using InfluxDB with Prometheus

[Prometheus](https://prometheus.io)
is an open source tool for collecting metrics.

Prometheus is by default, a stateful application relying on local storage.
You cannot run stateful applications using local storage on GOV.UK PaaS.

If you want to store metrics using Prometheus that persist between app
restarts, you can configure Prometheus to delegate storage of metrics to
InfluxDB.

To do this you configure Prometheus using the
[`remote_read`](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_read)
and
[`remote_write`](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write)
sections in the `prometheus.yml` configuration file.

When you run Prometheus as an app on GOV.UK PaaS and bind that app to an
InfluxDB service instance, the `VCAP_SERVICES` environment variable will
contain the relevant `remote_read` and `remote_write` Prometheus configuration.

<h2 id="remove-the-service">Remove the service</h2>

### Unbind an InfluxDB service from your app

You must unbind the InfluxDB service before you can delete it. Run the following in the command line:

```
cf unbind-service APP_NAME SERVICE_NAME
```

where:

- `APP_NAME` is your app's deployed instance name as specified in your app's `manifest.yml` or push command
- `SERVICE_NAME` is a unique descriptive name for this service instance

For example:

```
cf unbind-service my-app my-influxdb-service
```

If you unbind your services from your app but do not delete them,
the services will persist even after you have deleted your app,
and you can re-bind or re-connect to them in future.

### Delete an InfluxDB service

Once you have unbound the InfluxDB service from your app, you can delete the service. Run the following in the command line:

```
cf delete-service SERVICE_NAME
```

where `SERVICE_NAME` is a unique descriptive name for this service instance. For example:

```
cf delete-service my-influxdb-service
```

Enter `yes` when asked for confirmation.

<h2 id="maintaining-the-service">Maintaining the service</h2>

### Data classification

You can store data classified up to Official on the GOV.UK PaaS. Refer to the [data security classification documentation](/deploying_services/#data-security-classification) for more information.

### InfluxDB backups

[Aiven](https://aiven.io)
automatically backs up all data stored within any InfluxDB service you create.

Backups are taken every 12 hours, and Aiven retains 2 backups at a time.

To restore data to an earlier state, you can visit the
[GOV.UK PaaS support page](https://www.cloud.service.gov.uk/support)
or contact us at
[gov-uk-paas-support@digital.cabinet-office.gov.uk](mailto:gov-uk-paas-support@digital.cabinet-office.gov.uk).

### Further information

Refer to the
[InfluxDB documentation](https://docs.influxdata.com/influxdb/v1.7/)
for more information.
